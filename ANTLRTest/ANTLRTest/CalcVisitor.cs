//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\pret-\Desktop\fa\ANTLRTest\ANTLRTest\Calc.g4 by ANTLR 4.6.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ANTLRTest {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CalcParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5")]
[System.CLSCompliant(false)]
public interface ICalcVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>ADDSUB</c>
	/// labeled alternative in <see cref="CalcParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitADDSUB([NotNull] CalcParser.ADDSUBContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>MUTDIV</c>
	/// labeled alternative in <see cref="CalcParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMUTDIV([NotNull] CalcParser.MUTDIVContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PAR</c>
	/// labeled alternative in <see cref="CalcParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPAR([NotNull] CalcParser.PARContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NUMBER</c>
	/// labeled alternative in <see cref="CalcParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNUMBER([NotNull] CalcParser.NUMBERContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>VAR</c>
	/// labeled alternative in <see cref="CalcParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVAR([NotNull] CalcParser.VARContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CalcParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProg([NotNull] CalcParser.ProgContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CalcParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] CalcParser.StatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CalcParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] CalcParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CalcParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] CalcParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CalcParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] CalcParser.FactorContext context);
}
} // namespace ANTLRTest
